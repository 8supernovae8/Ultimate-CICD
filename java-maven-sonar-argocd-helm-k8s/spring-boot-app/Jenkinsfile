pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                    script {
                        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh "mvn clean install"
                        }
                    }
            }
        }
        stage('sonarqube') {
            steps {
                    script {
                        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONARQUBE_TOKEN')]) {
                            dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                            sh "mvn sonar:sonar -Dsonar.projectKey=abyvarghese_spring-boot-app -Dsonar.host.url=http://3.148.109.81:9000 -Dsonar.login=${SONARQUBE_TOKEN}"
                            }
                    }
            }
          }
        }
        stage('Docker image build') {
            steps {
                    script {
                        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh "docker build -t spring-boot-app:${BUILD_NUMBER} ."
                        sh "docker tag spring-boot-app:${BUILD_NUMBER} abyvarghese1990/spring-boot-app:${BUILD_NUMBER}"
                        sh 'docker images'
                        }
                    }

                
            }
        }
        stage('Docker image push') {
                environment{
                    DockerImage = "abyvarghese1990/spring-boot-app:${BUILD_NUMBER}"
                }
                steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh "docker push ${DockerImage}"
                        }
                    }
                }
            }
        }
        stage('update manifest'){ 
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests') {
                    sh 'cat deployment.yaml'
                    sh 'sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml'
                    sh 'git add .'
                    sh 'git commit -m "updated image tag"'
                    sh 'git push origin main'   
                    sh
                    }
                }
            }
            }
        }
    //     stage('Build and Push Docker Image') {
    //           environment {
    //             DOCKER_IMAGE = "abyvarghese1990/ultimate-cicd-new:${BUILD_NUMBER}"
    //             REGISTRY_CREDENTIALS = credentials('dockerhub')
    //           }
    //           steps {
    //             script {
    //                 sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
    //                 def dockerImage = docker.image("${DOCKER_IMAGE}")
    //                 docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
    //                     dockerImage.push()
    //                 }
    //             }
    //           }
    // }
    
    }
}
